trigger:
  - main

pool:
  name: 'Default'
  demands:
    - agent.os -equals linux
    - agent.name -equals quadz-customer-prod-vm

variables:
  - group: TerraformSecrets

steps:
# Step 1: Change working directory and Terraform Init
- script: |
    cd /home/quadz/node-hello
    terraform init
  displayName: 'Terraform Init'

# Step 2: Terraform Plan using default.tfvars
- script: |
    cd /home/quadz/node-hello
    terraform plan -var-file=default.tfvars -out=tfplan
  displayName: 'Terraform Plan'

# Step 3: Terraform Apply
- script: |
    cd /home/quadz/node-hello
    terraform apply -auto-approve tfplan
  displayName: 'Terraform Apply'

# Step 4: Get VM IP Address
- script: |
    cd /home/quadz/node-hello
    terraform apply -refresh-only -var-file=default.tfvars
    VM_IP=$(terraform output -raw vm_ip)

    # Debug the VM IP value
    echo "VM IP: $VM_IP"

    # Set the variable for use in subsequent pipeline steps
    echo "##vso[task.setvariable variable=VM_IP]$VM_IP"
  displayName: 'Get VM Public IP'

# Step 5: Wait for VM to be ready
- script: |
    echo "Waiting for VM to be ready..."
    sleep 5
  displayName: 'Waiting for VM to be Ready'

# Step 6: SSH into VM and Deploy Node.js Application
- script: |
    echo "Attempting to SSH into the VM..."

    # Verify that the IP is valid
    if [ -z "$VM_IP" ]; then
      echo "Error: VM_IP is not set."
      exit 1
    fi

    echo "VM IP is: $VM_IP"

    if ! [[ "$VM_IP" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
      echo "Error: Invalid IP address format: $VM_IP"
      exit 1
    fi

    if [ -z "$VM_USERNAME" ] || [ -z "$VM_PASSWORD" ]; then
      echo "Error: VM_USERNAME or VM_PASSWORD is not set."
      exit 1
    fi

    # Install sshpass if not already installed
    sudo apt-get update && sudo apt-get install -y sshpass

    # Use rsync to transfer your application files to the VM
    sshpass -p "$VM_PASSWORD" rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ "$VM_USERNAME@$VM_IP:/home/$VM_USERNAME/node-hello"

    # SSH into the VM and set up the application
    sshpass -p "$VM_PASSWORD" ssh -o StrictHostKeyChecking=no "$VM_USERNAME@$VM_IP" <<EOF
      # Navigate to the application directory
      cd /home/$VM_USERNAME/node-hello
      
      # Ensure Node.js is installed
      curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
      sudo apt install -y nodejs npm

      # Install dependencies and start the application using PM2
      npm install
      npm install -g pm2
      pm2 start npm --name "app" -- start
      pm2 save
EOF
  displayName: 'SSH into VM and Deploy Application'
