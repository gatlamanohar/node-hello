trigger:
  - main

pool:
  name: 'Default'
  demands:
    - agent.os -equals linux
    - agent.name -equals quadz-customer-prod-vm

variables:
  - group: TerraformSecrets

steps:
# Step 1: Change working directory and Terraform Init
- script: |
    cd /home/quadz/node-hello
    terraform init
  displayName: 'Terraform Init'

# Step 2: Terraform Plan using default.tfvars
- script: |
    cd /home/quadz/node-hello
    terraform plan -var-file=default.tfvars -out=tfplan
  displayName: 'Terraform Plan'

# Step 3: Terraform Apply
- script: |
    cd /home/quadz/node-hello
    terraform apply -auto-approve tfplan
  displayName: 'Terraform Apply'

# Step 4: Get VM IP Address
- script: |
    cd /home/quadz/node-hello
    terraform refresh -var-file=default.tfvars
    terraform output vm_ip
    # Attempt to access the output for the VM IP (this assumes you've defined it properly in Terraform)
    export VM_IP=$(terraform output -raw vm_ip)

    # Debug the VM IP value
    echo "VM IP: $VM_IP"
    echo "##vso[task.setvariable variable=VM_IP]$VM_IP"
  displayName: 'Get VM Public IP'

# Step 5: Wait for VM to be ready
- script: |
    echo "Waiting for VM to be ready..."
    sleep 5
  displayName: 'Waiting for VM to be Ready'

# Step 6: SSH into VM and Deploy Node.js Application
- script: |
    echo "Attempting to SSH into the VM..."

    if [ -z "$VM_IP" ]; then
      echo "Error: VM_IP is not set."
      exit 1
    fi

    echo "VM IP is: $VM_IP"

    if ! [[ "$VM_IP" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
      echo "Error: Invalid IP address format: $VM_IP"
      exit 1
    fi

    if [ -z "$VM_USERNAME" ] || [ -z "$VM_PASSWORD" ]; then
      echo "Error: VM_USERNAME or VM_PASSWORD is not set."
      exit 1
    fi

    sudo apt-get update && sudo apt-get install -y sshpass

    sshpass -p "$VM_PASSWORD" rsync -avz -e "ssh -o StrictHostKeyChecking=no" ./ "$VM_USERNAME@$VM_IP:/home/$VM_USERNAME/node-hello"

    sshpass -p "$VM_PASSWORD" ssh -o StrictHostKeyChecking=no "$VM_USERNAME@$VM_IP" "
      sudo apt update && 
      sudo apt install -y curl &&
      curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash - &&
      sudo apt install -y nodejs &&
      # cd /home/$VM_USERNAME/node-hello && \
      # npm install && \
      # sudo npm install -g pm2 && \
      # if pm2 list | grep -q 'app'; then \
      #     echo "App is already running. Restarting the app..."; \
      #     pm2 restart app; \
      # else \
      #     echo "Starting the app..."; \
      #     pm2 start npm --name 'app' -- start; \
      # fi && \
      # pm2 save && \
      # pm2 ls
      cd /home/$VM_USERNAME/node-hello && \
      npm install && \
      sudo npm install -g pm2 && \
      pm2 resurrect || pm2 start npm --name 'app' -- start && \
      pm2 reload 'app' || pm2 restart 'app' && \
      pm2 save && \
      pm2 startup systemd -u $VM_USERNAME --hp /home/$VM_USERNAME && \
      pm2 ls
    "
  displayName: 'SSH into VM and Deploy Application'
